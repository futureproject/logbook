.label-switch {
  $switch-width: 52px;
  $switch-padding: 2px;
  $switch-height: 32px;
  $switch-radius: $switch-height;
  $knob-height: $switch-height - ($switch-padding * 2);
  $knob-width: $knob-height;
  $knob-radius: $switch-height - ($switch-padding * 2);

  align-self: center;
  border-radius: $switch-radius;
  cursor: pointer;
  display: inline-block;
  height: $switch-height;
  position: relative;
  vertical-align: middle;
  width: $switch-width;
  @include box-sizing(border-box);

  input[type="checkbox"] {
    display: none;

  + .checkbox {
    background: #e5e5e5;
    border: none;
    border-radius: $switch-radius;
    cursor: pointer;
    height: $switch-height;
    margin: 0;
    padding: 0;
    position: relative;
    width: $switch-width;
    z-index: 0;
    @include box-sizing(border-box);
    @include transition(all 0.3s ease);

    &:before {
      background: white;
      border-radius: $switch-radius;
      content: ' ';
      height: $knob-radius;
      width: $switch-width - ($switch-padding * 2);
      z-index: 1;
      @include box-sizing(border-box);
      @include position(absolute, 2px 0 0 2px);
      @include transition(all 0.3s ease);
      @include transform(scale(1));
    }

    &:after {
      background: white;
      border-radius: $knob-radius;
      content: ' ';
      height: $knob-height;
      width: $knob-width;
      z-index: 2;
      @include box-shadow(0 2px 5px rgba(0,0,0,0.4));
      @include position(absolute, 2px 0 0 2px);
      @include transition(all 0.3s ease);
    }
  }

  &:checked {
    + .checkbox {
      background: $blue;
        
        &:before {
          @include transform(scale(0));
        }

        &:after {
          left: $switch-width - $knob-width - ($switch-padding);
        }
      }
    }
  }
}
.badges {
  $badge-background: $medium-gray;
  $badge-dark-color: $dark-gray;
  $badge-error-color: $error-color;
  $badge-notice-color: $notice-color;
  $badge-success-color: $success-color;
  $badge-font-color: #fff;
  $badge-font-size: $base-font-size * .75;

  display: block;
  margin-bottom: $base-line-height;

  .badge {
    @include inline-block;
    background: $badge-background;
    border-radius: 2em;
    color: $badge-font-color;
    font-size: $badge-font-size;
    font-weight: 600;
    line-height: 1;
    padding: .25em 1em;
    text-align: center;

    &.dark {
      background: $badge-dark-color;
    }

    &.error {
      background: $badge-error-color;
      color: darken($badge-error-color, 60);
    }

    &.notice {
      background: $badge-notice-color;
      color: darken($badge-error-color, 60);
    }

    &.success {
      background: $badge-success-color;
      color: darken($badge-success-color, 60);
    }
  }
}

.button-group {
  $button-group-background: $base-font-color;
  $button-group-color: lighten($base-font-color, 30);
  $button-group-border-highlight: lighten($button-group-background, 15);
  $button-group-active: $base-accent-color;

  button {
    @include button(simple, $button-group-background);
    font-weight: 400;
    color: $button-group-color;
    font-size: $base-font-size;
    outline: none;
    width: 100%;
    display: block;
    border-top-width: 0;

    &.active {
      @include button(simple, $button-group-active);
      font-weight: 400;
      font-size: $base-font-size;
    }

    &:first-child {
      @include border-bottom-radius(0);
      border-top-width: 1px;
    }

    &:not(:first-child):not(:last-child) {
      border-radius: 0;
    }

    &:last-child {
      @include border-top-radius(0);
    }

    @include media($medium-screen) {
      width: auto;
      float: left;
      border-top-width: 1px;

      &:first-child {
        border-top-right-radius: 0;
        border-bottom-left-radius: 3px;
      }

      &:not(:first-child):not(:last-child) {
        border-left: 1px solid $button-group-border-highlight;
        border-radius: 0;
      }

      &:last-child {
        border-left: 1px solid $button-group-border-highlight;
        border-bottom-left-radius: 0;
      }
    }
  }
}
@mixin grid-item-columns($columns) {
  width: (100% / 12) * $columns;
}

.grid-items-lines {
  $grid-items-background: $base-body-color;
  $grid-item-background: $base-body-color;
  $grid-item-border: 1px solid transparentize($base-font-color, .8); 
  $grid-item-columns: 4;
  $grid-item-big-columns: 8;
  $grid-item-color: $base-font-color;
  $grid-item-height: 14em;

  @include clearfix;
  position: relative;
    
  .grid-item {
    @include transition (all 0.2s ease-in-out);
    height: $grid-item-height;
    background: $grid-item-background;
    width: 100%;
    overflow: hidden;
    float: left;
    padding: 2em;
    border-right: $grid-item-border;
    border-bottom: $grid-item-border;
    cursor: pointer;

    @include media($large-screen) {
      @include grid-item-columns($grid-item-columns);
    }

    &:hover {
      background: transparentize($grid-item-color, .95);
    }
  }

  .grid-item img {
      display: block;
      height: 2.5em;
      margin-bottom: 1.2em;
      opacity: .2;
    }

  .grid-item h1 {
      color: $grid-item-color;
      font-size: 1.3em;
      margin-bottom: .4em;
    }

  .grid-item p {
      color: transparentize($grid-item-color, .4);
      @include media($medium-screen) {
        max-width: 70%;
      }
    }

  .grid-item-big {
    @include media($large-screen) {
      @include grid-item-columns($grid-item-big-columns);
    }
    p {
      @include media($medium-screen) {
        max-width: 60%;
      }  
    }
  }

  // this, below, might not be the most beautiful solution but it removes the outer borders by using the background color.
  .bottom-cover {
    position: absolute;
    bottom: 0px;
    width: 100%;
    height: 3px;
    background: $grid-items-background;
  }

  .right-cover {
    position: absolute;
    right: 0px;
    height: 100%;
    width: 4px;
    background: $grid-items-background;
  }
}

